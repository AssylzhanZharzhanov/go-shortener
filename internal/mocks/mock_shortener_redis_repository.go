// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/AssylzhanZharzhanov/go-shortener/internal/shortener/domain (interfaces: ShortenerRedisRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/AssylzhanZharzhanov/go-shortener/internal/shortener/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockShortenerRedisRepository is a mock of ShortenerRedisRepository interface.
type MockShortenerRedisRepository struct {
	ctrl     *gomock.Controller
	recorder *MockShortenerRedisRepositoryMockRecorder
}

// MockShortenerRedisRepositoryMockRecorder is the mock recorder for MockShortenerRedisRepository.
type MockShortenerRedisRepositoryMockRecorder struct {
	mock *MockShortenerRedisRepository
}

// NewMockShortenerRedisRepository creates a new mock instance.
func NewMockShortenerRedisRepository(ctrl *gomock.Controller) *MockShortenerRedisRepository {
	mock := &MockShortenerRedisRepository{ctrl: ctrl}
	mock.recorder = &MockShortenerRedisRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortenerRedisRepository) EXPECT() *MockShortenerRedisRepositoryMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockShortenerRedisRepository) Delete(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockShortenerRedisRepositoryMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockShortenerRedisRepository)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockShortenerRedisRepository) Get(arg0 context.Context, arg1 string) (*domain.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*domain.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockShortenerRedisRepositoryMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockShortenerRedisRepository)(nil).Get), arg0, arg1)
}

// Set mocks base method.
func (m *MockShortenerRedisRepository) Set(arg0 context.Context, arg1 string, arg2 *domain.Link, arg3 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockShortenerRedisRepositoryMockRecorder) Set(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockShortenerRedisRepository)(nil).Set), arg0, arg1, arg2, arg3)
}
