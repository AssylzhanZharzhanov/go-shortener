// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/AssylzhanZharzhanov/go-shortener/internal/shortener/domain (interfaces: ShortenerRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	domain "github.com/AssylzhanZharzhanov/go-shortener/internal/shortener/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockShortenerRepository is a mock of ShortenerRepository interface.
type MockShortenerRepository struct {
	ctrl     *gomock.Controller
	recorder *MockShortenerRepositoryMockRecorder
}

// MockShortenerRepositoryMockRecorder is the mock recorder for MockShortenerRepository.
type MockShortenerRepositoryMockRecorder struct {
	mock *MockShortenerRepository
}

// NewMockShortenerRepository creates a new mock instance.
func NewMockShortenerRepository(ctrl *gomock.Controller) *MockShortenerRepository {
	mock := &MockShortenerRepository{ctrl: ctrl}
	mock.recorder = &MockShortenerRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortenerRepository) EXPECT() *MockShortenerRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockShortenerRepository) Create(arg0 *domain.Link) (*domain.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*domain.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockShortenerRepositoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockShortenerRepository)(nil).Create), arg0)
}

// Get mocks base method.
func (m *MockShortenerRepository) Get(arg0 string) (*domain.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*domain.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockShortenerRepositoryMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockShortenerRepository)(nil).Get), arg0)
}

// IsExist mocks base method.
func (m *MockShortenerRepository) IsExist(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsExist", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsExist indicates an expected call of IsExist.
func (mr *MockShortenerRepositoryMockRecorder) IsExist(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsExist", reflect.TypeOf((*MockShortenerRepository)(nil).IsExist), arg0)
}
